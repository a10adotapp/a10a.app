// Code generated by ent, DO NOT EDIT.

package linenftmillionarthursproperty

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/a10adotapp/a10a.app/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldDeletedAt, v))
}

// Series applies equality check predicate on the "series" field. It's identical to SeriesEQ.
func Series(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldSeries, v))
}

// GearCategory applies equality check predicate on the "gear_category" field. It's identical to GearCategoryEQ.
func GearCategory(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldGearCategory, v))
}

// GearRarity applies equality check predicate on the "gear_rarity" field. It's identical to GearRarityEQ.
func GearRarity(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldGearRarity, v))
}

// Omj applies equality check predicate on the "omj" field. It's identical to OmjEQ.
func Omj(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldOmj, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotNull(FieldDeletedAt))
}

// SeriesEQ applies the EQ predicate on the "series" field.
func SeriesEQ(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldSeries, v))
}

// SeriesNEQ applies the NEQ predicate on the "series" field.
func SeriesNEQ(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNEQ(FieldSeries, v))
}

// SeriesIn applies the In predicate on the "series" field.
func SeriesIn(vs ...string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIn(FieldSeries, vs...))
}

// SeriesNotIn applies the NotIn predicate on the "series" field.
func SeriesNotIn(vs ...string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotIn(FieldSeries, vs...))
}

// SeriesGT applies the GT predicate on the "series" field.
func SeriesGT(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGT(FieldSeries, v))
}

// SeriesGTE applies the GTE predicate on the "series" field.
func SeriesGTE(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGTE(FieldSeries, v))
}

// SeriesLT applies the LT predicate on the "series" field.
func SeriesLT(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLT(FieldSeries, v))
}

// SeriesLTE applies the LTE predicate on the "series" field.
func SeriesLTE(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLTE(FieldSeries, v))
}

// SeriesContains applies the Contains predicate on the "series" field.
func SeriesContains(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldContains(FieldSeries, v))
}

// SeriesHasPrefix applies the HasPrefix predicate on the "series" field.
func SeriesHasPrefix(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldHasPrefix(FieldSeries, v))
}

// SeriesHasSuffix applies the HasSuffix predicate on the "series" field.
func SeriesHasSuffix(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldHasSuffix(FieldSeries, v))
}

// SeriesIsNil applies the IsNil predicate on the "series" field.
func SeriesIsNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIsNull(FieldSeries))
}

// SeriesNotNil applies the NotNil predicate on the "series" field.
func SeriesNotNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotNull(FieldSeries))
}

// SeriesEqualFold applies the EqualFold predicate on the "series" field.
func SeriesEqualFold(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEqualFold(FieldSeries, v))
}

// SeriesContainsFold applies the ContainsFold predicate on the "series" field.
func SeriesContainsFold(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldContainsFold(FieldSeries, v))
}

// GearCategoryEQ applies the EQ predicate on the "gear_category" field.
func GearCategoryEQ(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldGearCategory, v))
}

// GearCategoryNEQ applies the NEQ predicate on the "gear_category" field.
func GearCategoryNEQ(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNEQ(FieldGearCategory, v))
}

// GearCategoryIn applies the In predicate on the "gear_category" field.
func GearCategoryIn(vs ...string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIn(FieldGearCategory, vs...))
}

// GearCategoryNotIn applies the NotIn predicate on the "gear_category" field.
func GearCategoryNotIn(vs ...string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotIn(FieldGearCategory, vs...))
}

// GearCategoryGT applies the GT predicate on the "gear_category" field.
func GearCategoryGT(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGT(FieldGearCategory, v))
}

// GearCategoryGTE applies the GTE predicate on the "gear_category" field.
func GearCategoryGTE(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGTE(FieldGearCategory, v))
}

// GearCategoryLT applies the LT predicate on the "gear_category" field.
func GearCategoryLT(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLT(FieldGearCategory, v))
}

// GearCategoryLTE applies the LTE predicate on the "gear_category" field.
func GearCategoryLTE(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLTE(FieldGearCategory, v))
}

// GearCategoryContains applies the Contains predicate on the "gear_category" field.
func GearCategoryContains(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldContains(FieldGearCategory, v))
}

// GearCategoryHasPrefix applies the HasPrefix predicate on the "gear_category" field.
func GearCategoryHasPrefix(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldHasPrefix(FieldGearCategory, v))
}

// GearCategoryHasSuffix applies the HasSuffix predicate on the "gear_category" field.
func GearCategoryHasSuffix(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldHasSuffix(FieldGearCategory, v))
}

// GearCategoryIsNil applies the IsNil predicate on the "gear_category" field.
func GearCategoryIsNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIsNull(FieldGearCategory))
}

// GearCategoryNotNil applies the NotNil predicate on the "gear_category" field.
func GearCategoryNotNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotNull(FieldGearCategory))
}

// GearCategoryEqualFold applies the EqualFold predicate on the "gear_category" field.
func GearCategoryEqualFold(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEqualFold(FieldGearCategory, v))
}

// GearCategoryContainsFold applies the ContainsFold predicate on the "gear_category" field.
func GearCategoryContainsFold(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldContainsFold(FieldGearCategory, v))
}

// GearRarityEQ applies the EQ predicate on the "gear_rarity" field.
func GearRarityEQ(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldGearRarity, v))
}

// GearRarityNEQ applies the NEQ predicate on the "gear_rarity" field.
func GearRarityNEQ(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNEQ(FieldGearRarity, v))
}

// GearRarityIn applies the In predicate on the "gear_rarity" field.
func GearRarityIn(vs ...string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIn(FieldGearRarity, vs...))
}

// GearRarityNotIn applies the NotIn predicate on the "gear_rarity" field.
func GearRarityNotIn(vs ...string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotIn(FieldGearRarity, vs...))
}

// GearRarityGT applies the GT predicate on the "gear_rarity" field.
func GearRarityGT(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGT(FieldGearRarity, v))
}

// GearRarityGTE applies the GTE predicate on the "gear_rarity" field.
func GearRarityGTE(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGTE(FieldGearRarity, v))
}

// GearRarityLT applies the LT predicate on the "gear_rarity" field.
func GearRarityLT(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLT(FieldGearRarity, v))
}

// GearRarityLTE applies the LTE predicate on the "gear_rarity" field.
func GearRarityLTE(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLTE(FieldGearRarity, v))
}

// GearRarityContains applies the Contains predicate on the "gear_rarity" field.
func GearRarityContains(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldContains(FieldGearRarity, v))
}

// GearRarityHasPrefix applies the HasPrefix predicate on the "gear_rarity" field.
func GearRarityHasPrefix(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldHasPrefix(FieldGearRarity, v))
}

// GearRarityHasSuffix applies the HasSuffix predicate on the "gear_rarity" field.
func GearRarityHasSuffix(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldHasSuffix(FieldGearRarity, v))
}

// GearRarityIsNil applies the IsNil predicate on the "gear_rarity" field.
func GearRarityIsNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIsNull(FieldGearRarity))
}

// GearRarityNotNil applies the NotNil predicate on the "gear_rarity" field.
func GearRarityNotNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotNull(FieldGearRarity))
}

// GearRarityEqualFold applies the EqualFold predicate on the "gear_rarity" field.
func GearRarityEqualFold(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEqualFold(FieldGearRarity, v))
}

// GearRarityContainsFold applies the ContainsFold predicate on the "gear_rarity" field.
func GearRarityContainsFold(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldContainsFold(FieldGearRarity, v))
}

// OmjEQ applies the EQ predicate on the "omj" field.
func OmjEQ(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEQ(FieldOmj, v))
}

// OmjNEQ applies the NEQ predicate on the "omj" field.
func OmjNEQ(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNEQ(FieldOmj, v))
}

// OmjIn applies the In predicate on the "omj" field.
func OmjIn(vs ...string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIn(FieldOmj, vs...))
}

// OmjNotIn applies the NotIn predicate on the "omj" field.
func OmjNotIn(vs ...string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotIn(FieldOmj, vs...))
}

// OmjGT applies the GT predicate on the "omj" field.
func OmjGT(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGT(FieldOmj, v))
}

// OmjGTE applies the GTE predicate on the "omj" field.
func OmjGTE(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldGTE(FieldOmj, v))
}

// OmjLT applies the LT predicate on the "omj" field.
func OmjLT(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLT(FieldOmj, v))
}

// OmjLTE applies the LTE predicate on the "omj" field.
func OmjLTE(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldLTE(FieldOmj, v))
}

// OmjContains applies the Contains predicate on the "omj" field.
func OmjContains(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldContains(FieldOmj, v))
}

// OmjHasPrefix applies the HasPrefix predicate on the "omj" field.
func OmjHasPrefix(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldHasPrefix(FieldOmj, v))
}

// OmjHasSuffix applies the HasSuffix predicate on the "omj" field.
func OmjHasSuffix(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldHasSuffix(FieldOmj, v))
}

// OmjIsNil applies the IsNil predicate on the "omj" field.
func OmjIsNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldIsNull(FieldOmj))
}

// OmjNotNil applies the NotNil predicate on the "omj" field.
func OmjNotNil() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldNotNull(FieldOmj))
}

// OmjEqualFold applies the EqualFold predicate on the "omj" field.
func OmjEqualFold(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldEqualFold(FieldOmj, v))
}

// OmjContainsFold applies the ContainsFold predicate on the "omj" field.
func OmjContainsFold(v string) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.FieldContainsFold(FieldOmj, v))
}

// HasLineNft applies the HasEdge predicate on the "line_nft" edge.
func HasLineNft() predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, LineNftTable, LineNftColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasLineNftWith applies the HasEdge predicate on the "line_nft" edge with a given conditions (other predicates).
func HasLineNftWith(preds ...predicate.LINENFT) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(func(s *sql.Selector) {
		step := newLineNftStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.LINENFTMillionArthursProperty) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.LINENFTMillionArthursProperty) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.LINENFTMillionArthursProperty) predicate.LINENFTMillionArthursProperty {
	return predicate.LINENFTMillionArthursProperty(sql.NotPredicates(p))
}
