// Code generated by ent, DO NOT EDIT.

package finschiaitemtokenactivity

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/a10adotapp/a10a.app/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldDeletedAt, v))
}

// TransactionHash applies equality check predicate on the "transaction_hash" field. It's identical to TransactionHashEQ.
func TransactionHash(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldTransactionHash, v))
}

// FinschiaItemTokenID applies equality check predicate on the "finschia_item_token_id" field. It's identical to FinschiaItemTokenIDEQ.
func FinschiaItemTokenID(v uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldFinschiaItemTokenID, v))
}

// ActivityType applies equality check predicate on the "activity_type" field. It's identical to ActivityTypeEQ.
func ActivityType(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldActivityType, v))
}

// ActivatedAt applies equality check predicate on the "activated_at" field. It's identical to ActivatedAtEQ.
func ActivatedAt(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldActivatedAt, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNotNull(FieldDeletedAt))
}

// TransactionHashEQ applies the EQ predicate on the "transaction_hash" field.
func TransactionHashEQ(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldTransactionHash, v))
}

// TransactionHashNEQ applies the NEQ predicate on the "transaction_hash" field.
func TransactionHashNEQ(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNEQ(FieldTransactionHash, v))
}

// TransactionHashIn applies the In predicate on the "transaction_hash" field.
func TransactionHashIn(vs ...string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldIn(FieldTransactionHash, vs...))
}

// TransactionHashNotIn applies the NotIn predicate on the "transaction_hash" field.
func TransactionHashNotIn(vs ...string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNotIn(FieldTransactionHash, vs...))
}

// TransactionHashGT applies the GT predicate on the "transaction_hash" field.
func TransactionHashGT(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGT(FieldTransactionHash, v))
}

// TransactionHashGTE applies the GTE predicate on the "transaction_hash" field.
func TransactionHashGTE(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGTE(FieldTransactionHash, v))
}

// TransactionHashLT applies the LT predicate on the "transaction_hash" field.
func TransactionHashLT(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLT(FieldTransactionHash, v))
}

// TransactionHashLTE applies the LTE predicate on the "transaction_hash" field.
func TransactionHashLTE(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLTE(FieldTransactionHash, v))
}

// TransactionHashContains applies the Contains predicate on the "transaction_hash" field.
func TransactionHashContains(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldContains(FieldTransactionHash, v))
}

// TransactionHashHasPrefix applies the HasPrefix predicate on the "transaction_hash" field.
func TransactionHashHasPrefix(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldHasPrefix(FieldTransactionHash, v))
}

// TransactionHashHasSuffix applies the HasSuffix predicate on the "transaction_hash" field.
func TransactionHashHasSuffix(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldHasSuffix(FieldTransactionHash, v))
}

// TransactionHashEqualFold applies the EqualFold predicate on the "transaction_hash" field.
func TransactionHashEqualFold(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEqualFold(FieldTransactionHash, v))
}

// TransactionHashContainsFold applies the ContainsFold predicate on the "transaction_hash" field.
func TransactionHashContainsFold(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldContainsFold(FieldTransactionHash, v))
}

// FinschiaItemTokenIDEQ applies the EQ predicate on the "finschia_item_token_id" field.
func FinschiaItemTokenIDEQ(v uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldFinschiaItemTokenID, v))
}

// FinschiaItemTokenIDNEQ applies the NEQ predicate on the "finschia_item_token_id" field.
func FinschiaItemTokenIDNEQ(v uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNEQ(FieldFinschiaItemTokenID, v))
}

// FinschiaItemTokenIDIn applies the In predicate on the "finschia_item_token_id" field.
func FinschiaItemTokenIDIn(vs ...uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldIn(FieldFinschiaItemTokenID, vs...))
}

// FinschiaItemTokenIDNotIn applies the NotIn predicate on the "finschia_item_token_id" field.
func FinschiaItemTokenIDNotIn(vs ...uint32) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNotIn(FieldFinschiaItemTokenID, vs...))
}

// ActivityTypeEQ applies the EQ predicate on the "activity_type" field.
func ActivityTypeEQ(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldActivityType, v))
}

// ActivityTypeNEQ applies the NEQ predicate on the "activity_type" field.
func ActivityTypeNEQ(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNEQ(FieldActivityType, v))
}

// ActivityTypeIn applies the In predicate on the "activity_type" field.
func ActivityTypeIn(vs ...string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldIn(FieldActivityType, vs...))
}

// ActivityTypeNotIn applies the NotIn predicate on the "activity_type" field.
func ActivityTypeNotIn(vs ...string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNotIn(FieldActivityType, vs...))
}

// ActivityTypeGT applies the GT predicate on the "activity_type" field.
func ActivityTypeGT(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGT(FieldActivityType, v))
}

// ActivityTypeGTE applies the GTE predicate on the "activity_type" field.
func ActivityTypeGTE(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGTE(FieldActivityType, v))
}

// ActivityTypeLT applies the LT predicate on the "activity_type" field.
func ActivityTypeLT(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLT(FieldActivityType, v))
}

// ActivityTypeLTE applies the LTE predicate on the "activity_type" field.
func ActivityTypeLTE(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLTE(FieldActivityType, v))
}

// ActivityTypeContains applies the Contains predicate on the "activity_type" field.
func ActivityTypeContains(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldContains(FieldActivityType, v))
}

// ActivityTypeHasPrefix applies the HasPrefix predicate on the "activity_type" field.
func ActivityTypeHasPrefix(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldHasPrefix(FieldActivityType, v))
}

// ActivityTypeHasSuffix applies the HasSuffix predicate on the "activity_type" field.
func ActivityTypeHasSuffix(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldHasSuffix(FieldActivityType, v))
}

// ActivityTypeEqualFold applies the EqualFold predicate on the "activity_type" field.
func ActivityTypeEqualFold(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEqualFold(FieldActivityType, v))
}

// ActivityTypeContainsFold applies the ContainsFold predicate on the "activity_type" field.
func ActivityTypeContainsFold(v string) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldContainsFold(FieldActivityType, v))
}

// ActivatedAtEQ applies the EQ predicate on the "activated_at" field.
func ActivatedAtEQ(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldEQ(FieldActivatedAt, v))
}

// ActivatedAtNEQ applies the NEQ predicate on the "activated_at" field.
func ActivatedAtNEQ(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNEQ(FieldActivatedAt, v))
}

// ActivatedAtIn applies the In predicate on the "activated_at" field.
func ActivatedAtIn(vs ...time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldIn(FieldActivatedAt, vs...))
}

// ActivatedAtNotIn applies the NotIn predicate on the "activated_at" field.
func ActivatedAtNotIn(vs ...time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldNotIn(FieldActivatedAt, vs...))
}

// ActivatedAtGT applies the GT predicate on the "activated_at" field.
func ActivatedAtGT(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGT(FieldActivatedAt, v))
}

// ActivatedAtGTE applies the GTE predicate on the "activated_at" field.
func ActivatedAtGTE(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldGTE(FieldActivatedAt, v))
}

// ActivatedAtLT applies the LT predicate on the "activated_at" field.
func ActivatedAtLT(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLT(FieldActivatedAt, v))
}

// ActivatedAtLTE applies the LTE predicate on the "activated_at" field.
func ActivatedAtLTE(v time.Time) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.FieldLTE(FieldActivatedAt, v))
}

// HasFinschiaItemToken applies the HasEdge predicate on the "finschia_item_token" edge.
func HasFinschiaItemToken() predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, FinschiaItemTokenTable, FinschiaItemTokenColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasFinschiaItemTokenWith applies the HasEdge predicate on the "finschia_item_token" edge with a given conditions (other predicates).
func HasFinschiaItemTokenWith(preds ...predicate.FinschiaItemToken) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(func(s *sql.Selector) {
		step := newFinschiaItemTokenStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FinschiaItemTokenActivity) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FinschiaItemTokenActivity) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FinschiaItemTokenActivity) predicate.FinschiaItemTokenActivity {
	return predicate.FinschiaItemTokenActivity(sql.NotPredicates(p))
}
